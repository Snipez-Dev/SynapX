local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local VoiceChatService = game:GetService("VoiceChatService")
local HttpService = game:GetService("HttpService")
local LocalizationService = game:GetService("LocalizationService")
local player = Players.LocalPlayer
local guiName = "CallSpoofV2GUI_Rewrite"
local blacklistedNames = {}
local espObjects = {}
local espEnabled = false

-- Function to check Exploit Compatibility
local function checkExploit()
    local exploitName = (identifyexecutor and identifyexecutor()) or "Unknown"
    local functions = {
        getrawmetatable = getrawmetatable,
        setreadonly = setreadonly,
        newcclosure = newcclosure,
        getnamecallmethod = getnamecallmethod
    }

    print("Checking Exploit Compatibility...")

    local allFunctionsAvailable = true

    for funcName, func in pairs(functions) do
        if func then
            print("✅ " .. funcName .. " is available")
        else
            print("❌ " .. funcName .. " is missing")
            allFunctionsAvailable = false
        end
    end

    if loadstring then
        print("✅ loadstring is available!")
    else
        print("❌ loadstring is not supported in this environment!")
        allFunctionsAvailable = false
    end

    if allFunctionsAvailable then
        print("Your exploit (" .. exploitName .. ") supports this script!")
    else
        print("Your exploit (" .. exploitName .. ") does not support this script!")
    end
end

checkExploit()

---------------------------------------------------------------------
-- Fallback function to fetch URL content using multiple methods --
---------------------------------------------------------------------
local function fetchURL(url)
    local content

    -- 1. Try using HttpService:GetAsync
    local success, result = pcall(function()
        return HttpService:GetAsync(url)
    end)
    if success and result and #result > 0 then
        print("[FetchURL] Successfully loaded via HttpService:GetAsync")
        return result
    end

    -- 2. Try using request (Synapse X, etc)
    if request then
        local success2, response = pcall(function()
            local req = request({Url = url, Method = "GET"})
            return req.Body
        end)
        if success2 and response and #response > 0 then
            print("[FetchURL] Successfully loaded via request")
            return response
        end
    end

    -- 3. Try using http_request (other exploits)
    if http_request then
        local success3, response = pcall(function()
            local req = http_request({Url = url, Method = "GET"})
            return req.Body
        end)
        if success3 and response and #response > 0 then
            print("[FetchURL] Successfully loaded via http_request")
            return response
        end
    end

    print("[FetchURL] Failed to fetch URL content with all methods.")
    return nil
end

-----------------------------------------
-- Load blacklist from the given URL  --
-----------------------------------------
local function loadBlacklist()
    local url = "https://raw.githubusercontent.com/Snipez-Dev/SynapX/refs/heads/main/banm"
    local content = fetchURL(url)

    if content then
        local names = string.split(content, "\n")
        for _, name in ipairs(names) do
            if name and name ~= "" then
                blacklistedNames[name] = true
            end
        end
        print("[loadBlacklist] Blacklist loaded successfully.")
        return blacklistedNames
    else
        warn("[loadBlacklist] Could not load blacklist content.")
        return {}
    end
end

-- Check if player is blacklisted
local function checkBlacklist()
    local blacklisted = loadBlacklist()
    print("[Debug] Checking if player is on the blacklist...")

    if blacklisted[player.Name] then
        print("[Fail] Player " .. player.Name .. " is on the blacklist. Kicking...")
        player:Kick("You are blacklisted! Contact the developer for more details.")
    else
        print("[Success] Player " .. player.Name .. " is not on the blacklist.")
    end
end

checkBlacklist()

---------------------------------------------------
-- Remove old GUI if it exists to avoid duplicates
---------------------------------------------------
if player:FindFirstChild(guiName) then
    player:FindFirstChild(guiName):Destroy()
    print("[Call Spoof] Old instance removed. Restarting...")
end

---------------------------------
-- Create the new ScreenGui --
---------------------------------
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = guiName

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 400, 0, 400)
frame.Position = UDim2.new(0.5, -200, 0.5, -200)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 2
frame.Draggable = true
frame.Active = true
frame.BackgroundTransparency = 0.1

------------------------
-- Close Button --
------------------------
local closeButton = Instance.new("TextButton", frame)
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Font = Enum.Font.SourceSansBold
closeButton.TextSize = 18
closeButton.BorderSizePixel = 0
closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
    print("[Call Spoof] GUI closed!")
end)

---------------------------
-- Title Label --
---------------------------
local titleLabel = Instance.new("TextLabel", frame)
titleLabel.Size = UDim2.new(1, -40, 0, 30)
titleLabel.Position = UDim2.new(0, 10, 0, 5)
titleLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
titleLabel.Text = "Call Spoof V2 Rewrite"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextSize = 16
titleLabel.TextXAlignment = Enum.TextXAlignment.Left

----------------------------
-- Button Creation Helper --
----------------------------
local buttonColor = Color3.fromRGB(150, 150, 150)
local function createButton(name, position, text, callback)
    local button = Instance.new("TextButton", frame)
    button.Name = name
    button.Size = UDim2.new(0, 180, 0, 40)
    button.Position = position
    button.BackgroundColor3 = buttonColor
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSansBold
    button.TextSize = 14
    button.BorderSizePixel = 0
    button.MouseButton1Click:Connect(callback)
    return button
end

----------------------------------------
-- Spoof Call Button (Voice Chat Spoof)
----------------------------------------
createButton("SpoofCall", UDim2.new(0, 10, 0, 40), "Spoof Call", function()
    local success, err = pcall(function()
        if VoiceChatService and VoiceChatService.joinVoice then
            VoiceChatService:joinVoice()
            print("[Call Spoof] Spoof successful!")
        else
            print("[Call Spoof] VoiceChatService not found!")
        end
    end)
    if not success then
        print("[Call Spoof] Error: " .. err)
    end
end)

----------------------------------------
-- Open GUI Button
----------------------------------------
createButton("OpenGUI", UDim2.new(0, 10, 0, 90), "Open GUI", function()
    if loadstring then
        local success, err = pcall(function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Snipez-Dev/SynapX/refs/heads/main/Open"))()
            print("[Open GUI] Loaded successfully!")
        end)
        if not success then
            print("[Open GUI] Error: " .. err)
        end
    else
        print("❌ loadstring is not supported for Open GUI!")
    end
end)

----------------------------------------
-- Infinity Yield Button
----------------------------------------
createButton("InfinityYield", UDim2.new(0, 210, 0, 90), "Infinity Yield", function()
    if loadstring then
        local success, err = pcall(function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/edgeiy/infiniteyield/master/source"))()
            print("[Infinity Yield] Loaded successfully!")
        end)
        if not success then
            print("[Infinity Yield] Error: " .. err)
        end
    else
        print("❌ loadstring is not supported for Infinity Yield!")
    end
end)

----------------------------------------
-- (Optional) ESP Toggle Button
----------------------------------------
createButton("ToggleESP", UDim2.new(0, 210, 0, 40), "Toggle ESP", function()
    espEnabled = not espEnabled
    if espEnabled then
        print("[ESP] Enabled!")
        for _, plr in pairs(Players:GetPlayers()) do
            if plr ~= player and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                local highlight = Instance.new("Highlight")
                highlight.Parent = plr.Character
                highlight.FillColor = Color3.fromRGB(255, 0, 0)
                highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                table.insert(espObjects, highlight)
                
                local nameTag = Instance.new("BillboardGui", plr.Character)
                nameTag.Size = UDim2.new(0, 100, 0, 25)
                nameTag.StudsOffset = Vector3.new(0, 3, 0)
                nameTag.Adornee = plr.Character:FindFirstChild("Head")
                table.insert(espObjects, nameTag)
                
                local textLabel = Instance.new("TextLabel", nameTag)
                textLabel.Size = UDim2.new(1, 0, 1, 0)
                textLabel.Text = plr.Name
                textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
                textLabel.BackgroundTransparency = 1
            end
        end
    else
        print("[ESP] Disabled!")
        for _, obj in ipairs(espObjects) do
            obj:Destroy()
        end
        espObjects = {}
    end
end)

-------------------------------------------------
-- Server/Player Info Label (bottom-right edge) --
-------------------------------------------------
local function updateServerInfo()
    local serverLanguage = LocalizationService:GetCountryRegionForPlayerAsync(player) or "Unknown"
    return "Players: " .. #Players:GetPlayers() .. " | Language: " .. serverLanguage
end

local serverInfoLabel = Instance.new("TextLabel", frame)
serverInfoLabel.Size = UDim2.new(0, 200, 0, 30)
serverInfoLabel.Position = UDim2.new(1, -210, 1, -40)
serverInfoLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
serverInfoLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
serverInfoLabel.Text = updateServerInfo()
serverInfoLabel.Font = Enum.Font.SourceSans
serverInfoLabel.TextSize = 14

-------------------------------------------------
-- Persistent Developer Announcement Box (bottom-left)
-------------------------------------------------
local footerText = Instance.new("TextLabel", screenGui)
footerText.Size = UDim2.new(0, 200, 0, 30)
footerText.Position = UDim2.new(0, 10, 1, -40)
footerText.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
footerText.BackgroundTransparency = 0.5
footerText.Text = "The script was made by Snipez"
footerText.TextColor3 = Color3.fromRGB(255, 255, 255)
footerText.Font = Enum.Font.SourceSans
footerText.TextSize = 14
footerText.TextXAlignment = Enum.TextXAlignment.Center
footerText.TextYAlignment = Enum.TextYAlignment.Center

